# Generated by Django 5.2.7 on 2025-10-04 19:01

import colorfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grafico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Gráfico')),
                ('tipo_grafico', models.CharField(choices=[('bar', 'Barras'), ('line', 'Linhas'), ('pie', 'Pizza'), ('doughnut', 'Rosca (Doughnut)'), ('radar', 'Radar')], default='bar', max_length=20, verbose_name='Tipo de Gráfico')),
                ('fonte_dados_slug', models.CharField(help_text="Identificador da função que gera os dados. Ex: 'casos_por_status', 'tarefas_por_responsavel'", max_length=100, unique=True, verbose_name='Fonte de Dados (Slug)')),
                ('ativo_no_dashboard', models.BooleanField(default=True, verbose_name='Mostrar no Dashboard?')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (menor aparece primeiro).')),
            ],
            options={
                'verbose_name': 'Gráfico do Dashboard',
                'verbose_name_plural': 'Gráficos do Dashboard',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='LogoConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(help_text='Faça o upload do logo da empresa. O ideal é um PNG com fundo transparente.', upload_to='logos_empresas/')),
                ('ativo', models.BooleanField(default=True, help_text='Marque esta opção para usar este logo. Apenas um logo pode estar ativo por vez.')),
            ],
            options={
                'verbose_name': 'Configuração de Logo',
                'verbose_name_plural': 'Configurações de Logo',
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Tema Padrão', max_length=100, unique=True)),
                ('cor_primaria', colorfield.fields.ColorField(default='#0D6EFD', image_field=None, max_length=25, samples=None, verbose_name='Cor Primária (botões, links principais)')),
                ('cor_sucesso', colorfield.fields.ColorField(default='#198754', image_field=None, max_length=25, samples=None, verbose_name='Cor de Sucesso (verde)')),
                ('cor_perigo', colorfield.fields.ColorField(default='#DC3545', image_field=None, max_length=25, samples=None, verbose_name='Cor de Perigo (vermelho)')),
                ('cor_barra_nav', colorfield.fields.ColorField(default='#212529', image_field=None, max_length=25, samples=None, verbose_name='Cor da Barra de Navegação Superior')),
                ('fonte_principal', models.CharField(default='Roboto', help_text="Nome da fonte do Google Fonts. Ex: 'Roboto', 'Lato', 'Open Sans'", max_length=200)),
                ('ativo', models.BooleanField(default=True, help_text='Apenas um tema pode estar ativo por vez.')),
            ],
            options={
                'verbose_name': 'Tema da Aplicação',
                'verbose_name_plural': 'Temas da Aplicação',
            },
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('ativo', models.BooleanField(default=True)),
                ('grupos_permitidos', models.ManyToManyField(blank=True, to='auth.group', verbose_name='Permitido para os Grupos')),
            ],
        ),
    ]
