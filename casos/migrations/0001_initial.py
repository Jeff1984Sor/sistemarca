# Generated by Django 5.2.7 on 2025-10-02 16:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Campo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_label', models.CharField(max_length=100, unique=True, verbose_name='Nome de Exibição do Campo')),
                ('nome_tecnico', models.SlugField(help_text='Nome interno do campo (automático)', max_length=100, unique=True)),
                ('tipo_campo', models.CharField(choices=[('text', 'Texto Curto (CharField)'), ('textarea', 'Texto Longo (TextField)'), ('number', 'Número Decimal (DecimalField)'), ('integer', 'Número Inteiro (IntegerField)'), ('date', 'Data (DateField)'), ('url', 'Link (URLField)'), ('select', 'Lista (Seleção)')], default='text', max_length=20)),
            ],
            options={
                'verbose_name': 'Campo Customizado',
                'verbose_name_plural': 'Campos Customizados',
                'ordering': ['nome_label'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do modelo para identificação interna.', max_length=100, unique=True)),
                ('assunto', models.CharField(help_text='Assunto do e-mail. Pode usar variáveis como {{ caso.titulo_caso }}.', max_length=255)),
                ('corpo', models.TextField(help_text='Corpo do e-mail em HTML. Use variáveis como {{ caso.cliente.nome_razao_social }} ou {{ user.get_full_name }}.')),
            ],
            options={
                'verbose_name': 'Modelo de E-mail',
                'verbose_name_plural': 'Modelos de E-mail',
            },
        ),
        migrations.CreateModel(
            name='EstruturaPasta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_pasta', models.CharField(max_length=100, verbose_name='Nome da Subpasta')),
            ],
            options={
                'verbose_name': 'Estrutura de Pasta',
                'verbose_name_plural': 'Estruturas de Pasta',
            },
        ),
        migrations.CreateModel(
            name='FaseWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('ordem', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['workflow', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.CreateModel(
            name='TipoTarefa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Tipo de Tarefa')),
                ('prazo_dias', models.IntegerField(verbose_name='Prazo Padrão (em dias)')),
                ('tipo_prazo', models.CharField(choices=[('U', 'Dias Úteis'), ('C', 'Dias Corridos')], default='U', max_length=1, verbose_name='Tipo de Prazo')),
                ('recorrente', models.BooleanField(default=False, verbose_name='É uma tarefa recorrente?')),
            ],
            options={
                'verbose_name': 'Tipo de Tarefa',
                'verbose_name_plural': 'Tipos de Tarefa',
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Advogado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Sistema')),
            ],
        ),
        migrations.CreateModel(
            name='Caso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_entrada_rca', models.DateField(verbose_name='Data de Entrada')),
                ('data_entrada_fase', models.DateTimeField(blank=True, null=True, verbose_name='Data de Entrada na Fase Atual')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento')),
                ('titulo_caso', models.CharField(blank=True, max_length=512, verbose_name='Título do Caso')),
                ('sharepoint_folder_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID da Pasta no SharePoint')),
                ('sharepoint_folder_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL da Pasta no SharePoint')),
                ('advogado_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casos', to='casos.advogado', verbose_name='Advogado Responsável')),
                ('analista', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='casos.analista')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clientes.cliente')),
                ('fase_atual_workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='casos.faseworkflow', verbose_name='Fase Atual do Workflow')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AndamentoCaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_andamento', models.DateField(default=django.utils.timezone.now, verbose_name='Data do Andamento')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('usuario_criacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='andamentos_caso', to='casos.caso')),
            ],
            options={
                'verbose_name': 'Andamento do Caso',
                'verbose_name_plural': 'Andamentos do Caso',
                'ordering': ['-data_andamento'],
            },
        ),
        migrations.CreateModel(
            name='EmailCaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('microsoft_message_id', models.CharField(help_text='ID único do e-mail na Microsoft Graph.', max_length=255, unique=True)),
                ('de', models.CharField(max_length=255, verbose_name='De')),
                ('para', models.TextField(verbose_name='Para')),
                ('assunto', models.CharField(max_length=255, verbose_name='Assunto')),
                ('preview', models.CharField(max_length=255, verbose_name='Pré-visualização do corpo')),
                ('corpo_html', models.TextField(verbose_name='Corpo do E-mail')),
                ('data_envio', models.DateTimeField(verbose_name='Data de Envio/Recebimento')),
                ('is_sent', models.BooleanField(default=False, help_text='True se foi enviado do sistema, False se foi recebido.')),
                ('thread_id', models.CharField(blank=True, help_text='ID da thread de conversação.', max_length=255, null=True)),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='casos.caso')),
            ],
            options={
                'verbose_name': 'E-mail do Caso',
                'verbose_name_plural': 'E-mails dos Casos',
                'ordering': ['-data_envio'],
            },
        ),
        migrations.CreateModel(
            name='FluxoInterno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_fluxo', models.DateField(verbose_name='Data')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fluxo_interno', to='casos.caso')),
                ('usuario_criacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Fluxo Interno',
                'verbose_name_plural': 'Fluxo Interno',
                'ordering': ['-data_fluxo', '-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='GraphWebhookSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.CharField(max_length=255, unique=True)),
                ('expiration_datetime', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricoFase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_entrada', models.DateTimeField(auto_now_add=True)),
                ('data_saida', models.DateTimeField(blank=True, null=True)),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_fases', to='casos.caso')),
                ('fase', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='casos.faseworkflow')),
            ],
            options={
                'ordering': ['data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='OpcaoCampo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(max_length=255)),
                ('nome_label', models.CharField(max_length=100, unique=True, verbose_name='Nome de Exibição do Campo')),
                ('nome_tecnico', models.SlugField(help_text="Nome interno do campo (automático), ex: 'valor_causa'", max_length=100, unique=True)),
                ('campo', models.ForeignKey(limit_choices_to={'tipo_campo': 'select'}, on_delete=django.db.models.deletion.CASCADE, related_name='opcoes', to='casos.campo')),
            ],
            options={
                'verbose_name': 'Campo Customizado',
                'verbose_name_plural': 'Campos Customizados',
                'ordering': ['nome_label'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Produto / Objeto do Serviço')),
                ('estrutura_pastas', models.ManyToManyField(blank=True, to='casos.estruturapasta', verbose_name='Estrutura de Pastas no SharePoint')),
            ],
        ),
        migrations.AddField(
            model_name='caso',
            name='produto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='casos.produto'),
        ),
        migrations.AddField(
            model_name='faseworkflow',
            name='atualiza_status_para',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='casos.status'),
        ),
        migrations.AddField(
            model_name='caso',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='casos.status'),
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_execucao', models.DateField(verbose_name='Data de Execução')),
                ('tempo', models.DurationField(verbose_name='Tempo Gasto (HH:MM)')),
                ('descricao', models.TextField(verbose_name='Descrição da Atividade')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to='casos.caso')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Profissional')),
            ],
            options={
                'ordering': ['-data_execucao'],
            },
        ),
        migrations.CreateModel(
            name='TarefaPadraoWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(default=0)),
                ('fase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas_padrao', to='casos.faseworkflow')),
                ('responsavel_override', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tipo_tarefa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='casos.tipotarefa')),
            ],
            options={
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('A', 'Em Andamento'), ('C', 'Concluída')], default='P', max_length=1)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão Real')),
                ('observacao', models.TextField(blank=True)),
                ('prazo_final', models.DateField(blank=True, null=True, verbose_name='Prazo Final')),
                ('descricao_conclusao', models.TextField(blank=True, verbose_name='Descrição da Conclusão')),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas', to='casos.caso')),
                ('origem_fase_workflow', models.ForeignKey(blank=True, help_text='Fase do workflow que gerou esta tarefa.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='casos.faseworkflow')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tipo_tarefa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='casos.tipotarefa', verbose_name='Tipo de Tarefa')),
            ],
            options={
                'ordering': ['data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='UserSignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text="Nome da assinatura (ex: 'Padrão', 'Simplificada').", max_length=100)),
                ('corpo_html', models.TextField(verbose_name='Assinatura em HTML')),
                ('is_default', models.BooleanField(default=False, verbose_name='É a assinatura padrão?')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assinaturas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assinatura de Usuário',
                'verbose_name_plural': 'Assinaturas de Usuários',
            },
        ),
        migrations.AddField(
            model_name='faseworkflow',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fases', to='casos.workflow'),
        ),
        migrations.CreateModel(
            name='RegraCampo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formato_titulo', models.TextField(blank=True, help_text='Defina o formato do título. Use {{ nome_do_campo }} para as variáveis. Ex: Aviso: {{ aviso }} - Segurado: {{ segurado }} - Tomador: {{ tomador }}', verbose_name='Formato do Título do Caso')),
                ('campos', models.ManyToManyField(to='casos.campo', verbose_name='Campos Customizados para esta Regra')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='casos.produto')),
            ],
            options={
                'verbose_name': 'Regra de Campos Customizados',
                'verbose_name_plural': 'Regras de Campos Customizados',
                'unique_together': {('cliente', 'produto')},
            },
        ),
        migrations.CreateModel(
            name='ValorCampoCaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.TextField(blank=True, null=True)),
                ('campo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='casos.campo')),
                ('caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valores_dinamicos', to='casos.caso')),
            ],
            options={
                'verbose_name': 'Valor de Campo Customizado',
                'verbose_name_plural': 'Valores de Campos Customizados',
                'ordering': ['campo__nome_label'],
                'unique_together': {('caso', 'campo')},
            },
        ),
        migrations.CreateModel(
            name='RegraWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='casos.produto')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='casos.workflow')),
            ],
            options={
                'verbose_name': 'Regra de Workflow',
                'verbose_name_plural': 'Regras de Workflow',
                'unique_together': {('cliente', 'produto')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='faseworkflow',
            unique_together={('workflow', 'ordem')},
        ),
    ]
